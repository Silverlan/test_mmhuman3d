name: Build Linux
on:
  push:
    branches: [ main, master, actions ]
  pull_request:
    branches: [ main, master, actions ]
  workflow_dispatch:

concurrency:
  group: environment-lin-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
            name: "Ubuntu GCC-11"
            artifact: "ubuntu_gcc.7z"
            build_type: "RelWithDebInfo"
            cc: "clang-14"
            cxx: "clang++-14"
            archiver: "7z a"
            generators: "Unix Makefiles"
            build_dir: 'build'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: open-mmlab
          python-version: 3.8

      - name: Build mmhuman3d
        shell: bash
        run: |
          # Install ffmpeg
          conda install ffmpeg

          # Install PyTorch
          conda install pytorch==1.8.0 torchvision cudatoolkit=10.2 -c pytorch -y

          # Install PyTorch3D
          conda install -c fvcore -c iopath -c conda-forge fvcore iopath -y
          conda install -c bottler nvidiacub -y
          conda install pytorch3d -c pytorch3d -y
          # Alternatively from source in case of dependency conflicts
          # git clone https://github.com/facebookresearch/pytorch3d.git
          # cd pytorch3d
          # pip install .
          # cd ..

          # Install mmcv-full
          pip install "mmcv-full>=1.3.17,<1.6.0" -f https://download.openmmlab.com/mmcv/dist/cu102/torch1.8.0/index.html

          # Optional: install mmdetection & mmpose & mmtracking
          pip install "mmdet<=2.25.1"
          pip install "mmpose<=0.28.1"
          pip install "mmcls<=0.23.2" "mmtrack<=0.13.0"

          # Install mmhuman3d
          git clone https://github.com/open-mmlab/mmhuman3d.git
          cd mmhuman3d
          pip install -v -e .

      - name: Handle Error
        uses: Silverlan/common_actions/action_handle_error@main
        if: failure()
